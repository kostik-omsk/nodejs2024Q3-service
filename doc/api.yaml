{
  "openapi": "3.0.0",
  "paths": {
    "/user": {
      "post": {
        "operationId": "UserController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Data for creating a new user",
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "name": "Vasia",
                  "version": 1,
                  "createdAt": 1672531199000,
                  "updatedAt": 1672531299000
                },
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "user successfully created",
            "schema": {
              "example": {
                "id": "123e4567-e89b-12d3-a456-426614174000",
                "name": "Vasia",
                "version": 1,
                "createdAt": 1672531199000,
                "updatedAt": 1672531299000
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUserDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. artistId is invalid (not uuid)"
          }
        },
        "summary": "Create user",
        "tags": [
          "Users"
        ]
      },
      "get": {
        "operationId": "UserController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "users found",
            "schema": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseUserDto"
                  }
                }
              }
            }
          }
        },
        "summary": "Get all users",
        "tags": [
          "Users"
        ]
      }
    },
    "/user/{id}": {
      "get": {
        "operationId": "UserController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID user id",
            "schema": {
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user found",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "123e4567-e89b-12d3-a456-426614174000",
                    "name": "Vasia",
                    "version": 1,
                    "createdAt": 1672531199000,
                    "updatedAt": 1672531299000
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. artistId is invalid (not uuid)"
          },
          "404": {
            "description": "user not found"
          }
        },
        "summary": "Get user by id",
        "tags": [
          "Users"
        ]
      },
      "put": {
        "operationId": "UserController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID user id",
            "schema": {
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Data for updating an existing user",
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "name": "Vasia",
                  "version": 1,
                  "createdAt": 1672531199000,
                  "updatedAt": 1672531299000
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "user successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUserDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. artistId is invalid (not uuid)"
          },
          "403": {
            "description": "old Password is wrong"
          },
          "404": {
            "description": "user not found"
          }
        },
        "summary": "Update user",
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "operationId": "UserController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID user id",
            "schema": {
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "user successfully deleted"
          },
          "400": {
            "description": "Bad request. artistId is invalid (not uuid)"
          },
          "404": {
            "description": "user not found"
          }
        },
        "summary": "Delete user by id",
        "tags": [
          "Users"
        ]
      }
    },
    "/artist": {
      "post": {
        "operationId": "ArtistController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Data for creating a new artist",
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "name": "Vasia",
                  "grammy": true
                },
                "$ref": "#/components/schemas/CreateArtistDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "artist successfully created",
            "schema": {
              "example": {
                "id": "123e4567-e89b-12d3-a456-426614174000",
                "name": "Vasia",
                "grammy": true
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseArtistDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. artistId is invalid (not uuid)"
          }
        },
        "summary": "Create artist",
        "tags": [
          "artist"
        ]
      },
      "get": {
        "operationId": "ArtistController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "artist found",
            "schema": {
              "example": {
                "name": "Vasia",
                "grammy": true
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseArtistDto"
                  }
                }
              }
            }
          }
        },
        "summary": "Get all artist",
        "tags": [
          "artist"
        ]
      }
    },
    "/artist/{id}": {
      "get": {
        "operationId": "ArtistController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID artist id",
            "schema": {
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "artist found",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "123e4567-e89b-12d3-a456-426614174000",
                    "name": "Vasia",
                    "grammy": true
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. artistId is invalid (not uuid)"
          },
          "404": {
            "description": "artist not found"
          }
        },
        "summary": "Get artist by id",
        "tags": [
          "artist"
        ]
      },
      "put": {
        "operationId": "ArtistController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID artist id",
            "schema": {
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Data for updating an existing artist",
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "name": "Vasia",
                  "grammy": true
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "artist successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseArtistDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. artistId is invalid (not uuid)"
          },
          "404": {
            "description": "artist not found"
          }
        },
        "summary": "Update artist",
        "tags": [
          "artist"
        ]
      },
      "delete": {
        "operationId": "ArtistController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID artist id",
            "schema": {
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "artist successfully deleted"
          },
          "400": {
            "description": "Bad request. artistId is invalid (not uuid)"
          },
          "404": {
            "description": "artist not found"
          }
        },
        "summary": "Delete artist by id",
        "tags": [
          "artist"
        ]
      }
    },
    "/track": {
      "post": {
        "operationId": "TrackController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Data for creating a new track",
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "name": "Track name",
                  "artistId": "123e4567-e89b-12d3-a456-426614174000",
                  "albumId": "123e4567-e89b-12d3-a456-426614174000",
                  "duration": 240
                },
                "$ref": "#/components/schemas/CreateTrackDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "track successfully created",
            "schema": {
              "example": {
                "id": "123e4567-e89b-12d3-a456-426614174000",
                "name": "Track name",
                "artistId": "123e4567-e89b-12d3-a456-426614174000",
                "albumId": "123e4567-e89b-12d3-a456-426614174000",
                "duration": 240
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseTrackDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. artistId is invalid (not uuid)"
          }
        },
        "summary": "Create track",
        "tags": [
          "track"
        ]
      },
      "get": {
        "operationId": "TrackController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "track found",
            "schema": {
              "example": {
                "name": "Track name",
                "artistId": "123e4567-e89b-12d3-a456-426614174000",
                "albumId": "123e4567-e89b-12d3-a456-426614174000",
                "duration": 240
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseTrackDto"
                  }
                }
              }
            }
          }
        },
        "summary": "Get all track",
        "tags": [
          "track"
        ]
      }
    },
    "/track/{id}": {
      "get": {
        "operationId": "TrackController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID track id",
            "schema": {
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "track found",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "123e4567-e89b-12d3-a456-426614174000",
                    "name": "Track name",
                    "artistId": "123e4567-e89b-12d3-a456-426614174000",
                    "albumId": "123e4567-e89b-12d3-a456-426614174000",
                    "duration": 240
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. artistId is invalid (not uuid)"
          },
          "404": {
            "description": "track not found"
          }
        },
        "summary": "Get track by id",
        "tags": [
          "track"
        ]
      },
      "put": {
        "operationId": "TrackController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID track id",
            "schema": {
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Data for updating an existing track",
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "name": "Track name",
                  "artistId": "123e4567-e89b-12d3-a456-426614174000",
                  "albumId": "123e4567-e89b-12d3-a456-426614174000",
                  "duration": 240
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "track successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseTrackDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. artistId is invalid (not uuid)"
          },
          "404": {
            "description": "track not found"
          }
        },
        "summary": "Update track",
        "tags": [
          "track"
        ]
      },
      "delete": {
        "operationId": "TrackController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID track id",
            "schema": {
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "track successfully deleted"
          },
          "400": {
            "description": "Bad request. artistId is invalid (not uuid)"
          },
          "404": {
            "description": "track not found"
          }
        },
        "summary": "Delete track by id",
        "tags": [
          "track"
        ]
      }
    },
    "/album": {
      "post": {
        "operationId": "AlbumController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Data for creating a new album",
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "name": "Album name",
                  "year": 2023,
                  "artistId": "123e4567-e89b-12d3-a456-426614174000"
                },
                "$ref": "#/components/schemas/CreateAlbumDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "album successfully created",
            "schema": {
              "example": {
                "id": "123e4567-e89b-12d3-a456-426614174000",
                "name": "Album name",
                "year": 2023,
                "artistId": "123e4567-e89b-12d3-a456-426614174000"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAlbumDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. artistId is invalid (not uuid)"
          }
        },
        "summary": "Create album",
        "tags": [
          "album"
        ]
      },
      "get": {
        "operationId": "AlbumController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "album found",
            "schema": {
              "example": {
                "name": "Album name",
                "year": 2023,
                "artistId": "123e4567-e89b-12d3-a456-426614174000"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseAlbumDto"
                  }
                }
              }
            }
          }
        },
        "summary": "Get all album",
        "tags": [
          "album"
        ]
      }
    },
    "/album/{id}": {
      "get": {
        "operationId": "AlbumController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID album id",
            "schema": {
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "album found",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "123e4567-e89b-12d3-a456-426614174000",
                    "name": "Album name",
                    "year": 2023,
                    "artistId": "123e4567-e89b-12d3-a456-426614174000"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. artistId is invalid (not uuid)"
          },
          "404": {
            "description": "album not found"
          }
        },
        "summary": "Get album by id",
        "tags": [
          "album"
        ]
      },
      "put": {
        "operationId": "AlbumController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID album id",
            "schema": {
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Data for updating an existing album",
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "name": "Album name",
                  "year": 2023,
                  "artistId": "123e4567-e89b-12d3-a456-426614174000"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "album successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAlbumDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. artistId is invalid (not uuid)"
          },
          "404": {
            "description": "album not found"
          }
        },
        "summary": "Update album",
        "tags": [
          "album"
        ]
      },
      "delete": {
        "operationId": "AlbumController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID album id",
            "schema": {
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "album successfully deleted"
          },
          "400": {
            "description": "Bad request. artistId is invalid (not uuid)"
          },
          "404": {
            "description": "album not found"
          }
        },
        "summary": "Delete album by id",
        "tags": [
          "album"
        ]
      }
    },
    "/favs": {
      "get": {
        "operationId": "FavoritesController_getAllFavorites",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns all favorites",
            "schema": {
              "example": {
                "artists": [
                  {
                    "id": "123e4567-e89b-12d3-a456-426614174000",
                    "name": "artist name",
                    "grammy": true
                  }
                ],
                "albums": [
                  {
                    "id": "123e4567-e89b-12d3-a456-426614174000",
                    "name": "album name",
                    "year": 2023,
                    "artistId": "123e4567-e89b-12d3-a456-426614174000"
                  }
                ],
                "tracks": [
                  {
                    "id": "123e4567-e89b-12d3-a456-426614174000",
                    "name": "track name",
                    "albumId": "123e4567-e89b-12d3-a456-426614174000",
                    "artistId": "123e4567-e89b-12d3-a456-426614174000",
                    "duration": 240
                  }
                ]
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFavoriteDto"
                }
              }
            }
          }
        },
        "summary": "Get all favorites",
        "tags": [
          "favorites"
        ]
      }
    },
    "/favs/artist/{id}": {
      "post": {
        "operationId": "FavoritesController_addArtist",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID artist id",
            "schema": {
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Add artist to favorites",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseArtistDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. id is invalid (not uuid)"
          },
          "422": {
            "description": "artist not found"
          }
        },
        "summary": "Add artist to favorites",
        "tags": [
          "favorites"
        ]
      },
      "delete": {
        "operationId": "FavoritesController_removeArtist",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID artist id",
            "schema": {
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Remove artist from favorites"
          },
          "400": {
            "description": "Bad request. id is invalid (not uuid)"
          },
          "422": {
            "description": "artist not found"
          }
        },
        "summary": "Remove artist from favorites",
        "tags": [
          "favorites"
        ]
      }
    },
    "/favs/album/{id}": {
      "post": {
        "operationId": "FavoritesController_addAlbums",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID album id",
            "schema": {
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Add album to favorites",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAlbumDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. id is invalid (not uuid)"
          },
          "422": {
            "description": "album not found"
          }
        },
        "summary": "Add album to favorites",
        "tags": [
          "favorites"
        ]
      },
      "delete": {
        "operationId": "FavoritesController_removeAlbums",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID album id",
            "schema": {
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Remove album from favorites"
          },
          "400": {
            "description": "Bad request. id is invalid (not uuid)"
          },
          "422": {
            "description": "album not found"
          }
        },
        "summary": "Remove album from favorites",
        "tags": [
          "favorites"
        ]
      }
    },
    "/favs/track/{id}": {
      "post": {
        "operationId": "FavoritesController_addTracks",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID track id",
            "schema": {
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Add track to favorites",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseTrackDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. id is invalid (not uuid)"
          },
          "422": {
            "description": "track not found"
          }
        },
        "summary": "Add track to favorites",
        "tags": [
          "favorites"
        ]
      },
      "delete": {
        "operationId": "FavoritesController_removeTracks",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID track id",
            "schema": {
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Remove track from favorites"
          },
          "400": {
            "description": "Bad request. id is invalid (not uuid)"
          },
          "422": {
            "description": "track not found"
          }
        },
        "summary": "Remove track from favorites",
        "tags": [
          "favorites"
        ]
      }
    }
  },
  "info": {
    "title": "Home Library Service",
    "description": "Home music library service",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "example": "user123",
            "description": "user login"
          },
          "password": {
            "type": "string",
            "example": "password123",
            "description": "user password",
            "minLength": 4,
            "maxLength": 20
          }
        },
        "required": [
          "login",
          "password"
        ]
      },
      "ResponseUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique user ID"
          },
          "login": {
            "type": "string",
            "description": "User's login"
          },
          "version": {
            "type": "number",
            "description": "version",
            "example": 1
          },
          "createdAt": {
            "type": "number",
            "description": "Date the record was created",
            "example": 1672531199000
          },
          "updatedAt": {
            "type": "number",
            "description": "The date of the last update of the record",
            "example": 1672531299000
          }
        },
        "required": [
          "id",
          "login",
          "version",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateArtistDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "artist123",
            "description": "artist name"
          },
          "grammy": {
            "type": "boolean",
            "example": "true",
            "description": "artist grammy"
          }
        },
        "required": [
          "name",
          "grammy"
        ]
      },
      "ResponseArtistDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "artist123",
            "description": "artist name"
          },
          "grammy": {
            "type": "boolean",
            "example": "true",
            "description": "artist grammy"
          },
          "id": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "format": "uuid",
            "description": "Unique artist ID"
          }
        },
        "required": [
          "id"
        ]
      },
      "CreateTrackDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "track name",
            "description": "track name"
          },
          "artistId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "format": "uuid | null",
            "description": "Unique artist ID"
          },
          "albumId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "format": "uuid | null",
            "description": "Unique album ID"
          },
          "duration": {
            "type": "number",
            "example": 240,
            "description": "track duration"
          }
        },
        "required": [
          "name",
          "artistId",
          "albumId",
          "duration"
        ]
      },
      "ResponseTrackDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique track ID",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "name": {
            "type": "string",
            "description": "Name of the track",
            "example": "Track name"
          },
          "artistId": {
            "type": "string",
            "description": "ID of the artist associated with the track",
            "example": "123e4567-e89b-12d3-a456-426614174000 | null"
          },
          "albumId": {
            "type": "string",
            "description": "ID of the album associated with the track",
            "example": "123e4567-e89b-12d3-a456-426614174000 | null"
          },
          "duration": {
            "type": "number",
            "description": "Duration of the track in seconds",
            "example": 240
          }
        },
        "required": [
          "id",
          "name",
          "artistId",
          "albumId",
          "duration"
        ]
      },
      "CreateAlbumDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the album",
            "example": "Album name"
          },
          "year": {
            "type": "number",
            "description": "Year of the album",
            "example": 2023
          },
          "artistId": {
            "type": "string",
            "description": "ID of the artist associated with the album",
            "example": "123e4567-e89b-12d3-a456-426614174000 | null"
          }
        },
        "required": [
          "name",
          "year",
          "artistId"
        ]
      },
      "ResponseAlbumDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique album ID",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "name": {
            "type": "string",
            "description": "Name of the album",
            "example": "Album name"
          },
          "year": {
            "type": "number",
            "description": "Year of the album",
            "example": 2023
          },
          "artistId": {
            "type": "string",
            "description": "ID of the artist associated with the album",
            "example": "123e4567-e89b-12d3-a456-426614174000 | null"
          }
        },
        "required": [
          "id",
          "name",
          "year",
          "artistId"
        ]
      },
      "ResponseFavoriteDto": {
        "type": "object",
        "properties": {
          "artists": {
            "description": "Favorite artists ids",
            "example": [
              {
                "id": "123e4567-e89b-12d3-a456-426614174000",
                "name": "artist name",
                "grammy": true
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseArtistDto"
            }
          },
          "albums": {
            "description": "Favorite albums ids",
            "example": [
              {
                "id": "123e4567-e89b-12d3-a456-426614174000",
                "name": "album name",
                "year": 2023,
                "artistId": "123e4567-e89b-12d3-a456-426614174000"
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseAlbumDto"
            }
          },
          "tracks": {
            "description": "Favorite tracks ids",
            "example": [
              {
                "id": "123e4567-e89b-12d3-a456-426614174000",
                "name": "track name",
                "artistId": "123e4567-e89b-12d3-a456-426614174000",
                "albumId": "123e4567-e89b-12d3-a456-426614174000",
                "duration": 240
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseTrackDto"
            }
          }
        },
        "required": [
          "artists",
          "albums",
          "tracks"
        ]
      }
    }
  }
}